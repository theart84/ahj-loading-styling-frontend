(()=>{"use strict";class t{constructor(t){this.post=t}markup(){return{type:"div",attr:{class:["post"],"data-post-id":this.post.id},content:[{type:"div",attr:{class:["post__header"]},content:{type:"h2",attr:{class:["post__title"]},content:this.post.title}},{type:"div",attr:{class:["post__body"]},content:[{type:"div",attr:{class:["post__image-wrapper"]},content:{type:"img",attr:{class:["post__image"],src:this.post.bodyImage},content:""}},{type:"p",attr:{class:["post__text"]},content:this.post.body.length>150?`${this.post.body.slice(0,150)}...`:this.post.body}]}]}}}const e=new class{generate(t){if(!1===t||null==t)return document.createTextNode("");if("string"!=typeof t.type)return document.createTextNode("");const e=document.createElement(`${t.type}`);return t.attr&&Object.entries(t.attr).forEach((([t,n])=>{"class"===t?e.className=n.join(" "):e.setAttribute(t,n)})),t.listener&&(Array.isArray(t.listener)?t.listener.forEach((t=>e.addEventListener(t.type,t.cb))):e.addEventListener(t.listener.type,t.listener.cb)),"string"==typeof t.content?(""===t.content&&(e.textContent=""),e.textContent=t.content):Array.isArray(t.content)?t.content.forEach((t=>e.appendChild(this.generate(t)))):"object"==typeof t.content&&e.appendChild(this.generate(t.content)),e}};const n=document.getElementById("root");new class{constructor(t){this.container=t}init(){this.bindToDOM(),this.registerEvents(),this.skeletonScreen(),this.fetchData(),this.connectWorker()}registerEvents(){}bindToDOM(){this.container.appendChild(e.generate(this.markup())),this.messageContainer=this.container.querySelector(".widget__content")}connectWorker(){navigator.serviceWorker&&window.addEventListener("load",(async()=>{try{await navigator.serviceWorker.register("./service.worker.js",{scope:"./"}),console.log("Service worker is register!")}catch(t){console.log(t)}}))}skeletonScreen(){for(let t=0;t<3;t++)this.messageContainer.insertAdjacentHTML("afterbegin",'\n      <div class="post--skeleton" data-post-id="82e31745-55b1-1af2-456e-64a1993e3a81">\n        <div class="post__header--skeleton">\n            <h2 class="post__title--skeleton skeleton-animation"></h2>\n        </div>\n        <div class="post__body--skeleton">\n          <div class="post__image-wrapper--skeleton skeleton-animation">\n            <img class="post__image--skeleton skeleton-animation" src="#" alt="">\n          </div>\n          <div class="post__text-container--skeleton">\n            <p class="post__text--skeleton skeleton-animation"></p>\n            <p class="post__text--skeleton skeleton-animation"></p>\n            <p class="post__text--skeleton skeleton-animation"></p>\n          </div>\n        </div>\n      </div>\n    ')}async fetchData(){const t=await fetch("https://ahj-loading-styling.herokuapp.com/posts"),e=await t.json();this.messageContainer.textContent="",this.addPost(e)}addPost(n){const{posts:s}=n;s.forEach((n=>{const s=new t(n);this.messageContainer.appendChild(e.generate(s.markup()))}))}markup(){return{type:"div",attr:{class:["widget"]},content:[{type:"div",attr:{class:["widget__header"]},content:[{type:"h1",attr:{class:["widget__title"]},content:"My Widget"}]},{type:"div",attr:{class:["widget__content"]},content:""}]}}}(n).init()})();